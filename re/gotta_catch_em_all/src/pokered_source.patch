diff --git a/constants/credits_constants.asm b/constants/credits_constants.asm
index f5715072..88237f33 100644
--- a/constants/credits_constants.asm
+++ b/constants/credits_constants.asm
@@ -1,67 +1,91 @@
 const_value = 0
 
 	const CRED_VERSION        ; $00
-	const CRED_TAJIRI         ; $01
-	const CRED_TA_OOTA        ; $02
-	const CRED_MORIMOTO       ; $03
-	const CRED_WATANABE       ; $04
-	const CRED_MASUDE         ; $05
-	const CRED_NISINO         ; $06
-	const CRED_SUGIMORI       ; $07
-	const CRED_NISHIDA        ; $08
-	const CRED_MIYAMOTO       ; $09
-	const CRED_KAWAGUCHI      ; $0A
-	const CRED_ISHIHARA       ; $0B
-	const CRED_YAMAUCHI       ; $0C
-	const CRED_ZINNAI         ; $0D
-	const CRED_HISHIDA        ; $0E
-	const CRED_SAKAI          ; $0F
-	const CRED_YAMAGUCHI      ; $10
-	const CRED_YAMAMOTO       ; $11
-	const CRED_TANIGUCHI      ; $12
-	const CRED_NONOMURA       ; $13
-	const CRED_FUZIWARA       ; $14
-	const CRED_MATSUSIMA      ; $15
-	const CRED_TOMISAWA       ; $16
-	const CRED_KAWAMOTO       ; $17
-	const CRED_KAKEI          ; $18
-	const CRED_TSUCHIYA       ; $19
-	const CRED_TA_NAKAMURA    ; $1A
-	const CRED_YUDA           ; $1B
-	const CRED_MON            ; $1C
-	const CRED_DIRECTOR       ; $1D
-	const CRED_PROGRAMMERS    ; $1E
-	const CRED_CHAR_DESIGN    ; $1F
-	const CRED_MUSIC          ; $20
-	const CRED_SOUND_EFFECTS  ; $21
-	const CRED_GAME_DESIGN    ; $22
-	const CRED_MONSTER_DESIGN ; $23
-	const CRED_GAME_SCENE     ; $24
-	const CRED_PARAM          ; $25
-	const CRED_MAP            ; $26
-	const CRED_TEST           ; $27
-	const CRED_SPECIAL        ; $28
-	const CRED_PRODUCERS      ; $29
-	const CRED_PRODUCER       ; $2A
-	const CRED_EXECUTIVE      ; $2B
-	const CRED_TAMADA         ; $2C
-	const CRED_SA_OOTA        ; $2D
-	const CRED_YOSHIKAWA      ; $2E
-	const CRED_TO_OOTA        ; $2F
-	const CRED_US_STAFF       ; $30
-	const CRED_US_COORD       ; $31
-	const CRED_TILDEN         ; $32
-	const CRED_KAWAKAMI       ; $33
-	const CRED_HI_NAKAMURA    ; $34
-	const CRED_GIESE          ; $35
-	const CRED_OSBORNE        ; $36
-	const CRED_TRANS          ; $37
-	const CRED_OGASAWARA      ; $38
-	const CRED_IWATA          ; $39
-	const CRED_IZUSHI         ; $3A
-	const CRED_HARADA         ; $3B
-	const CRED_MURAKAWA       ; $3C
-	const CRED_FUKUI          ; $3D
-	const CRED_CLUB           ; $3E
-	const CRED_PAAD           ; $3F
-
+	const CRED_MARIT
+	const CRED_PEWZ
+	const CRED_CHIEF
+	const CRED_TECH_CHIEF
+	const CRED_YEAR
+	const CRED_WEB_PAGE
+	const CRED_NOHAC
+	const CRED_NIC0
+	const CRED_MISC
+	const CRED_ZUP
+	const CRED_BOLZZY
+	const CRED_INFRA
+	const CRED_CRYPTO
+	const CRED_CHABZ
+	const CRED_WEB
+	const CRED_ALEKSI
+	const CRED_FORENSICS
+	const CRED_PWN
+	const CRED_REVERSING
+	const CRED_FLAG
+	const CRED_FLAG2
+	const CRED_FLAG3
+	const CRED_FLAG4
+;	const CRED_VERSION        ; $00
+;	const CRED_TAJIRI         ; $01
+;	const CRED_TA_OOTA        ; $02
+;	const CRED_MORIMOTO       ; $03
+;	const CRED_WATANABE       ; $04
+;	const CRED_MASUDE         ; $05
+;	const CRED_NISINO         ; $06
+;	const CRED_SUGIMORI       ; $07
+;	const CRED_NISHIDA        ; $08
+;	const CRED_MIYAMOTO       ; $09
+;	const CRED_KAWAGUCHI      ; $0A
+;	const CRED_ISHIHARA       ; $0B
+;	const CRED_YAMAUCHI       ; $0C
+;	const CRED_ZINNAI         ; $0D
+;	const CRED_HISHIDA        ; $0E
+;	const CRED_SAKAI          ; $0F
+;	const CRED_YAMAGUCHI      ; $10
+;	const CRED_YAMAMOTO       ; $11
+;	const CRED_TANIGUCHI      ; $12
+;	const CRED_NONOMURA       ; $13
+;	const CRED_FUZIWARA       ; $14
+;	const CRED_MATSUSIMA      ; $15
+;	const CRED_TOMISAWA       ; $16
+;	const CRED_KAWAMOTO       ; $17
+;	const CRED_KAKEI          ; $18
+;	const CRED_TSUCHIYA       ; $19
+;	const CRED_TA_NAKAMURA    ; $1A
+;	const CRED_YUDA           ; $1B
+;	const CRED_MON            ; $1C
+;	const CRED_DIRECTOR       ; $1D
+;	const CRED_PROGRAMMERS    ; $1E
+;	const CRED_CHAR_DESIGN    ; $1F
+;	const CRED_MUSIC          ; $20
+;	const CRED_SOUND_EFFECTS  ; $21
+;	const CRED_GAME_DESIGN    ; $22
+;	const CRED_MONSTER_DESIGN ; $23
+;	const CRED_GAME_SCENE     ; $24
+;	const CRED_PARAM          ; $25
+;	const CRED_MAP            ; $26
+;	const CRED_TEST           ; $27
+;	const CRED_SPECIAL        ; $28
+;	const CRED_PRODUCERS      ; $29
+;	const CRED_PRODUCER       ; $2A
+;	const CRED_EXECUTIVE      ; $2B
+;	const CRED_TAMADA         ; $2C
+;	const CRED_SA_OOTA        ; $2D
+;	const CRED_YOSHIKAWA      ; $2E
+;	const CRED_TO_OOTA        ; $2F
+;	const CRED_US_STAFF       ; $30
+;	const CRED_US_COORD       ; $31
+;	const CRED_TILDEN         ; $32
+;	const CRED_KAWAKAMI       ; $33
+;	const CRED_HI_NAKAMURA    ; $34
+;	const CRED_GIESE          ; $35
+;	const CRED_OSBORNE        ; $36
+;	const CRED_TRANS          ; $37
+;	const CRED_OGASAWARA      ; $38
+;	const CRED_IWATA          ; $39
+;	const CRED_IZUSHI         ; $3A
+;	const CRED_HARADA         ; $3B
+;	const CRED_MURAKAWA       ; $3C
+;	const CRED_FUKUI          ; $3D
+;	const CRED_CLUB           ; $3E
+;	const CRED_PAAD           ; $3F
+;
diff --git a/data/credits_order.asm b/data/credits_order.asm
index 20b9137f..79d9c62b 100755
--- a/data/credits_order.asm
+++ b/data/credits_order.asm
@@ -2,38 +2,50 @@ CreditsOrder:
 ; subsequent credits elements will be displayed on separate lines.
 ; $FF, $FE, $FD, $FC, $FB, and $FA are commands that are used
 ; to go to the next set of credits texts.
-	db CRED_MON, CRED_VERSION, $FF
-	db CRED_DIRECTOR, CRED_TAJIRI, $FF
-	db CRED_PROGRAMMERS, CRED_TA_OOTA, CRED_MORIMOTO, $FD
-	db CRED_PROGRAMMERS, CRED_WATANABE, CRED_MASUDE, CRED_TAMADA, $FE
-	db CRED_CHAR_DESIGN, CRED_SUGIMORI, CRED_NISHIDA, $FF
-	db CRED_MUSIC, CRED_MASUDE, $FD
-	db CRED_SOUND_EFFECTS, CRED_MASUDE, $FE
-	db CRED_GAME_DESIGN, CRED_TAJIRI, $FF
-	db CRED_MONSTER_DESIGN, CRED_SUGIMORI, CRED_NISHIDA, CRED_FUZIWARA, $FD
-	db CRED_MONSTER_DESIGN, CRED_MORIMOTO, CRED_SA_OOTA, CRED_YOSHIKAWA, $FE
-	db CRED_GAME_SCENE, CRED_TAJIRI, $FD
-	db CRED_GAME_SCENE, CRED_TANIGUCHI, CRED_NONOMURA, CRED_ZINNAI, $FE
-	db CRED_PARAM, CRED_NISINO, CRED_TA_NAKAMURA, $FF
-	db CRED_MAP, CRED_TAJIRI, CRED_NISINO, $FD
-	db CRED_MAP, CRED_MATSUSIMA, CRED_NONOMURA, CRED_TANIGUCHI, $FE
-	db CRED_TEST, CRED_KAKEI, CRED_TSUCHIYA, $FD
-	db CRED_TEST, CRED_TA_NAKAMURA, CRED_YUDA, $FE
-	db CRED_SPECIAL, CRED_HISHIDA, CRED_SAKAI, $FD
-	db CRED_SPECIAL, CRED_YAMAGUCHI, CRED_YAMAMOTO, $FC
-	db CRED_SPECIAL, CRED_TOMISAWA, CRED_KAWAMOTO, CRED_TO_OOTA, $FE
-	db CRED_PRODUCERS, CRED_MIYAMOTO, $FD
-	db CRED_PRODUCERS, CRED_KAWAGUCHI, $FC
-	db CRED_PRODUCERS, CRED_ISHIHARA, $FE
-	db CRED_US_STAFF, $FD
-	db CRED_US_COORD, CRED_TILDEN, $FD
-	db CRED_US_COORD, CRED_KAWAKAMI, CRED_HI_NAKAMURA, $FC
-	db CRED_US_COORD, CRED_GIESE, CRED_OSBORNE, $FC
-	db CRED_TRANS, CRED_OGASAWARA, $FD
-	db CRED_PROGRAMMERS, CRED_MURAKAWA, CRED_FUKUI, $FD
-	db CRED_SPECIAL, CRED_IWATA, $FD
-	db CRED_SPECIAL, CRED_HARADA, $FC
-	db CRED_TEST, CRED_PAAD, CRED_CLUB, $FD
-	db CRED_PRODUCER, CRED_IZUSHI, $FD
-	db CRED_EXECUTIVE, CRED_YAMAUCHI, $FF
+	db CRED_VERSION, CRED_YEAR, $FF
+	db CRED_CHIEF, CRED_MARIT, $FF
+	db CRED_TECH_CHIEF, CRED_PEWZ, $FF
+	db CRED_INFRA, CRED_BOLZZY, CRED_PEWZ, $FF
+	db CRED_WEB_PAGE, CRED_NOHAC, CRED_NIC0, $FF
+	db CRED_MISC, CRED_ZUP, $FF
+	db CRED_CRYPTO, CRED_CHABZ, CRED_NIC0, $FF
+	db CRED_WEB, CRED_ALEKSI, $FF
+	db CRED_FORENSICS, CRED_BOLZZY, $FF
+	db CRED_PWN, CRED_MARIT, $FF
+	db CRED_REVERSING, CRED_PEWZ, $FF
+	db CRED_FLAG, CRED_FLAG2, CRED_FLAG3, CRED_FLAG4, $F0
+	;db CRED_MON, CRED_VERSION, $FF
+	;db CRED_DIRECTOR, CRED_TAJIRI, $FF
+	;db CRED_PROGRAMMERS, CRED_TA_OOTA, CRED_MORIMOTO, $FD
+	;db CRED_PROGRAMMERS, CRED_WATANABE, CRED_MASUDE, CRED_TAMADA, $FE
+	;db CRED_CHAR_DESIGN, CRED_SUGIMORI, CRED_NISHIDA, $FF
+	;db CRED_MUSIC, CRED_MASUDE, $FD
+	;db CRED_SOUND_EFFECTS, CRED_MASUDE, $FE
+	;db CRED_GAME_DESIGN, CRED_TAJIRI, $FF
+	;db CRED_MONSTER_DESIGN, CRED_SUGIMORI, CRED_NISHIDA, CRED_FUZIWARA, $FD
+	;db CRED_MONSTER_DESIGN, CRED_MORIMOTO, CRED_SA_OOTA, CRED_YOSHIKAWA, $FE
+	;db CRED_GAME_SCENE, CRED_TAJIRI, $FD
+	;db CRED_GAME_SCENE, CRED_TANIGUCHI, CRED_NONOMURA, CRED_ZINNAI, $FE
+	;db CRED_PARAM, CRED_NISINO, CRED_TA_NAKAMURA, $FF
+	;db CRED_MAP, CRED_TAJIRI, CRED_NISINO, $FD
+	;db CRED_MAP, CRED_MATSUSIMA, CRED_NONOMURA, CRED_TANIGUCHI, $FE
+	;db CRED_TEST, CRED_KAKEI, CRED_TSUCHIYA, $FD
+	;db CRED_TEST, CRED_TA_NAKAMURA, CRED_YUDA, $FE
+	;db CRED_SPECIAL, CRED_HISHIDA, CRED_SAKAI, $FD
+	;db CRED_SPECIAL, CRED_YAMAGUCHI, CRED_YAMAMOTO, $FC
+	;db CRED_SPECIAL, CRED_TOMISAWA, CRED_KAWAMOTO, CRED_TO_OOTA, $FE
+	;db CRED_PRODUCERS, CRED_MIYAMOTO, $FD
+	;db CRED_PRODUCERS, CRED_KAWAGUCHI, $FC
+	;db CRED_PRODUCERS, CRED_ISHIHARA, $FE
+	;db CRED_US_STAFF, $FD
+	;db CRED_US_COORD, CRED_TILDEN, $FD
+	;db CRED_US_COORD, CRED_KAWAKAMI, CRED_HI_NAKAMURA, $FC
+	;db CRED_US_COORD, CRED_GIESE, CRED_OSBORNE, $FC
+	;db CRED_TRANS, CRED_OGASAWARA, $FD
+	;db CRED_PROGRAMMERS, CRED_MURAKAWA, CRED_FUKUI, $FD
+	;db CRED_SPECIAL, CRED_IWATA, $FD
+	;db CRED_SPECIAL, CRED_HARADA, $FC
+	;db CRED_TEST, CRED_PAAD, CRED_CLUB, $FD
+	;db CRED_PRODUCER, CRED_IZUSHI, $FD
+	;db CRED_EXECUTIVE, CRED_YAMAUCHI, $FF
 	db $FB, $FF, $FA
diff --git a/engine/HoF_room_pc.asm b/engine/HoF_room_pc.asm
index 7e08631c..89b2d75d 100755
--- a/engine/HoF_room_pc.asm
+++ b/engine/HoF_room_pc.asm
@@ -192,6 +192,8 @@ Credits:
 	jr z, .showCopyrightText
 	cp $fa
 	jr z, .showTheEnd
+	cp $f0
+	jr z, .showFlag
 	push hl
 	push hl
 	ld hl, CreditsTextPointers
@@ -233,6 +235,26 @@ Credits:
 .next2
 	call DelayFrames
 	jr .nextCreditsScreen
+.showFlag
+	call FadeInCreditsText
+	ld c, 90
+	call DelayFrames
+.waitForInput
+	call JoypadLowSensitivity
+	ld a, [hJoyPressed]
+	and a
+	jr z, .waitForInput
+;.checkForPressedButton
+;	sla a
+;	jr c, .foundPressedButton
+;	inc hl
+;	inc hl
+;	inc hl
+;	inc hl
+;	jr .checkForPressedButton
+;.foundPressedButton
+	call DisplayCreditsMon
+	jr .nextCreditsScreen
 .showCopyrightText
 	push de
 	callba LoadCopyrightTiles
diff --git a/engine/hall_of_fame.asm b/engine/hall_of_fame.asm
index 3c9b1723..ecf0caee 100755
--- a/engine/hall_of_fame.asm
+++ b/engine/hall_of_fame.asm
@@ -38,6 +38,7 @@ AnimateHallOfFame:
 	call PlayMusic
 	ld hl, wPartySpecies
 	ld c, $ff
+	jp .doneShowingParty
 .partyMonLoop
 	ld a, [hli]
 	cp $ff
@@ -225,11 +226,19 @@ HoFDisplayPlayerStats:
 	call PlaceString
 	coord hl, 5, 7
 	ld de, wPlayTimeHours
+	push af
+	ld a, 13
+	ld [de], a ; added lol
+	pop af
 	lb bc, 1, 3
 	call PrintNumber
 	ld [hl], $6d
 	inc hl
 	ld de, wPlayTimeMinutes
+	push af
+	ld a, 37
+	ld [de], a ; added lol
+	pop af
 	lb bc, LEADING_ZEROES | 1, 2
 	call PrintNumber
 	coord hl, 1, 9
@@ -237,7 +246,27 @@ HoFDisplayPlayerStats:
 	call PlaceString
 	coord hl, 4, 10
 	ld de, wPlayerMoney
-	ld c, $a3
+	push af
+	ld a, 65
+	; the BCD numbers are stored as four bits per digit
+	; so 41 becomes:
+	; bin(1) => 01 => 0001
+	; bin(4) => 100 => 0100
+	; 41 => 01000001 = 65, as seen above
+	; set number to = 41414141
+	ld [de], a
+	inc de
+	ld [de], a
+	inc de
+	ld [de], a
+	inc de
+	ld [de], a
+	; reset pointer
+	ld de, wPlayerMoney
+	pop af
+	;ld c, $a3
+	; flags + length in bits 0-4
+	ld c, $a4
 	call PrintBCDNumber
 	ld hl, DexSeenOwnedText
 	call HoFPrintTextAndDelay
diff --git a/engine/menu/league_pc.asm b/engine/menu/league_pc.asm
index 170c0ef3..29f3d643 100755
--- a/engine/menu/league_pc.asm
+++ b/engine/menu/league_pc.asm
@@ -23,6 +23,7 @@ PKMNLeaguePC:
 	ld b, HOF_TEAM_CAPACITY
 	sub b
 	ld [wHoFTeamNo], a
+	;jp	.doneShowingTeams
 .loop
 	ld hl, wHoFTeamNo
 	inc [hl]
diff --git a/engine/menu/main_menu.asm b/engine/menu/main_menu.asm
index da2e98e4..7a671db5 100755
--- a/engine/menu/main_menu.asm
+++ b/engine/menu/main_menu.asm
@@ -8,7 +8,7 @@ MainMenu:
 	call CheckForPlayerNameInSRAM
 	jr nc, .mainMenuLoop
 
-	predef LoadSAV
+	;predef LoadSAV
 
 .mainMenuLoop
 	ld c, 20
@@ -29,6 +29,7 @@ MainMenu:
 	call LoadFontTilePatterns
 	ld hl, wd730
 	set 6, [hl]
+	; skip save files :))
 	ld a, [wSaveFileStatus]
 	cp 1
 	jr z, .noSaveFile
@@ -114,6 +115,9 @@ MainMenu:
 	ld a, [wNumHoFTeams]
 	and a
 	jp z, SpecialEnterMap
+	; rofl
+	ld a, HALL_OF_FAME
+	ld [wCurMap], a
 	ld a, [wCurMap] ; map ID
 	cp HALL_OF_FAME
 	jp nz, SpecialEnterMap
@@ -131,166 +135,166 @@ InitOptions:
 	ld [wOptions], a
 	ret
 
-LinkMenu:
-	xor a
-	ld [wLetterPrintingDelayFlags], a
-	ld hl, wd72e
-	set 6, [hl]
-	ld hl, TextTerminator_6b20
-	call PrintText
-	call SaveScreenTilesToBuffer1
-	ld hl, WhereWouldYouLikeText
-	call PrintText
-	coord hl, 5, 5
-	ld b, $6
-	ld c, $d
-	call TextBoxBorder
-	call UpdateSprites
-	coord hl, 7, 7
-	ld de, CableClubOptionsText
-	call PlaceString
-	xor a
-	ld [wUnusedCD37], a
-	ld [wd72d], a
-	ld hl, wTopMenuItemY
-	ld a, $7
-	ld [hli], a
-	ld a, $6
-	ld [hli], a
-	xor a
-	ld [hli], a
-	inc hl
-	ld a, $2
-	ld [hli], a
-	inc a
-	; ld a, A_BUTTON | B_BUTTON
-	ld [hli], a ; wMenuWatchedKeys
-	xor a
-	ld [hl], a
-.waitForInputLoop
-	call HandleMenuInput
-	and A_BUTTON | B_BUTTON
-	add a
-	add a
-	ld b, a
-	ld a, [wCurrentMenuItem]
-	add b
-	add $d0
-	ld [wLinkMenuSelectionSendBuffer], a
-	ld [wLinkMenuSelectionSendBuffer + 1], a
-.exchangeMenuSelectionLoop
-	call Serial_ExchangeLinkMenuSelection
-	ld a, [wLinkMenuSelectionReceiveBuffer]
-	ld b, a
-	and $f0
-	cp $d0
-	jr z, .asm_5c7d
-	ld a, [wLinkMenuSelectionReceiveBuffer + 1]
-	ld b, a
-	and $f0
-	cp $d0
-	jr nz, .exchangeMenuSelectionLoop
-.asm_5c7d
-	ld a, b
-	and $c ; did the enemy press A or B?
-	jr nz, .enemyPressedAOrB
-; the enemy didn't press A or B
-	ld a, [wLinkMenuSelectionSendBuffer]
-	and $c ; did the player press A or B?
-	jr z, .waitForInputLoop ; if neither the player nor the enemy pressed A or B, try again
-	jr .doneChoosingMenuSelection ; if the player pressed A or B but the enemy didn't, use the player's selection
-.enemyPressedAOrB
-	ld a, [wLinkMenuSelectionSendBuffer]
-	and $c ; did the player press A or B?
-	jr z, .useEnemyMenuSelection ; if the enemy pressed A or B but the player didn't, use the enemy's selection
-; the enemy and the player both pressed A or B
-; The gameboy that is clocking the connection wins.
-	ld a, [hSerialConnectionStatus]
-	cp USING_INTERNAL_CLOCK
-	jr z, .doneChoosingMenuSelection
-.useEnemyMenuSelection
-	ld a, b
-	ld [wLinkMenuSelectionSendBuffer], a
-	and $3
-	ld [wCurrentMenuItem], a
-.doneChoosingMenuSelection
-	ld a, [hSerialConnectionStatus]
-	cp USING_INTERNAL_CLOCK
-	jr nz, .skipStartingTransfer
-	call DelayFrame
-	call DelayFrame
-	ld a, START_TRANSFER_INTERNAL_CLOCK
-	ld [rSC], a
-.skipStartingTransfer
-	ld b, $7f
-	ld c, $7f
-	ld d, $ec
-	ld a, [wLinkMenuSelectionSendBuffer]
-	and (B_BUTTON << 2) ; was B button pressed?
-	jr nz, .updateCursorPosition
-; A button was pressed
-	ld a, [wCurrentMenuItem]
-	cp $2
-	jr z, .updateCursorPosition
-	ld c, d
-	ld d, b
-	dec a
-	jr z, .updateCursorPosition
-	ld b, c
-	ld c, d
-.updateCursorPosition
-	ld a, b
-	Coorda 6, 7
-	ld a, c
-	Coorda 6, 9
-	ld a, d
-	Coorda 6, 11
-	ld c, 40
-	call DelayFrames
-	call LoadScreenTilesFromBuffer1
-	ld a, [wLinkMenuSelectionSendBuffer]
-	and (B_BUTTON << 2) ; was B button pressed?
-	jr nz, .choseCancel ; cancel if B pressed
-	ld a, [wCurrentMenuItem]
-	cp $2
-	jr z, .choseCancel
-	xor a
-	ld [wWalkBikeSurfState], a ; start walking
-	ld a, [wCurrentMenuItem]
-	and a
-	ld a, COLOSSEUM
-	jr nz, .next
-	ld a, TRADE_CENTER
-.next
-	ld [wd72d], a
-	ld hl, PleaseWaitText
-	call PrintText
-	ld c, 50
-	call DelayFrames
-	ld hl, wd732
-	res 1, [hl]
-	ld a, [wDefaultMap]
-	ld [wDestinationMap], a
-	call SpecialWarpIn
-	ld c, 20
-	call DelayFrames
-	xor a
-	ld [wMenuJoypadPollCount], a
-	ld [wSerialExchangeNybbleSendData], a
-	inc a ; LINK_STATE_IN_CABLE_CLUB
-	ld [wLinkState], a
-	ld [wEnteringCableClub], a
-	jr SpecialEnterMap
-.choseCancel
-	xor a
-	ld [wMenuJoypadPollCount], a
-	call Delay3
-	call CloseLinkConnection
-	ld hl, LinkCanceledText
-	call PrintText
-	ld hl, wd72e
-	res 6, [hl]
-	ret
+;LinkMenu:
+;	xor a
+;	ld [wLetterPrintingDelayFlags], a
+;	ld hl, wd72e
+;	set 6, [hl]
+;	ld hl, TextTerminator_6b20
+;	call PrintText
+;	call SaveScreenTilesToBuffer1
+;	ld hl, WhereWouldYouLikeText
+;	call PrintText
+;	coord hl, 5, 5
+;	ld b, $6
+;	ld c, $d
+;	call TextBoxBorder
+;	call UpdateSprites
+;	coord hl, 7, 7
+;	ld de, CableClubOptionsText
+;	call PlaceString
+;	xor a
+;	ld [wUnusedCD37], a
+;	ld [wd72d], a
+;	ld hl, wTopMenuItemY
+;	ld a, $7
+;	ld [hli], a
+;	ld a, $6
+;	ld [hli], a
+;	xor a
+;	ld [hli], a
+;	inc hl
+;	ld a, $2
+;	ld [hli], a
+;	inc a
+;	; ld a, A_BUTTON | B_BUTTON
+;	ld [hli], a ; wMenuWatchedKeys
+;	xor a
+;	ld [hl], a
+;.waitForInputLoop
+;	call HandleMenuInput
+;	and A_BUTTON | B_BUTTON
+;	add a
+;	add a
+;	ld b, a
+;	ld a, [wCurrentMenuItem]
+;	add b
+;	add $d0
+;	ld [wLinkMenuSelectionSendBuffer], a
+;	ld [wLinkMenuSelectionSendBuffer + 1], a
+;.exchangeMenuSelectionLoop
+;	call Serial_ExchangeLinkMenuSelection
+;	ld a, [wLinkMenuSelectionReceiveBuffer]
+;	ld b, a
+;	and $f0
+;	cp $d0
+;	jr z, .asm_5c7d
+;	ld a, [wLinkMenuSelectionReceiveBuffer + 1]
+;	ld b, a
+;	and $f0
+;	cp $d0
+;	jr nz, .exchangeMenuSelectionLoop
+;.asm_5c7d
+;	ld a, b
+;	and $c ; did the enemy press A or B?
+;	jr nz, .enemyPressedAOrB
+;; the enemy didn't press A or B
+;	ld a, [wLinkMenuSelectionSendBuffer]
+;	and $c ; did the player press A or B?
+;	jr z, .waitForInputLoop ; if neither the player nor the enemy pressed A or B, try again
+;	jr .doneChoosingMenuSelection ; if the player pressed A or B but the enemy didn't, use the player's selection
+;.enemyPressedAOrB
+;	ld a, [wLinkMenuSelectionSendBuffer]
+;	and $c ; did the player press A or B?
+;	jr z, .useEnemyMenuSelection ; if the enemy pressed A or B but the player didn't, use the enemy's selection
+;; the enemy and the player both pressed A or B
+;; The gameboy that is clocking the connection wins.
+;	ld a, [hSerialConnectionStatus]
+;	cp USING_INTERNAL_CLOCK
+;	jr z, .doneChoosingMenuSelection
+;.useEnemyMenuSelection
+;	ld a, b
+;	ld [wLinkMenuSelectionSendBuffer], a
+;	and $3
+;	ld [wCurrentMenuItem], a
+;.doneChoosingMenuSelection
+;	ld a, [hSerialConnectionStatus]
+;	cp USING_INTERNAL_CLOCK
+;	jr nz, .skipStartingTransfer
+;	call DelayFrame
+;	call DelayFrame
+;	ld a, START_TRANSFER_INTERNAL_CLOCK
+;	ld [rSC], a
+;.skipStartingTransfer
+;	ld b, $7f
+;	ld c, $7f
+;	ld d, $ec
+;	ld a, [wLinkMenuSelectionSendBuffer]
+;	and (B_BUTTON << 2) ; was B button pressed?
+;	jr nz, .updateCursorPosition
+;; A button was pressed
+;	ld a, [wCurrentMenuItem]
+;	cp $2
+;	jr z, .updateCursorPosition
+;	ld c, d
+;	ld d, b
+;	dec a
+;	jr z, .updateCursorPosition
+;	ld b, c
+;	ld c, d
+;.updateCursorPosition
+;	ld a, b
+;	Coorda 6, 7
+;	ld a, c
+;	Coorda 6, 9
+;	ld a, d
+;	Coorda 6, 11
+;	ld c, 40
+;	call DelayFrames
+;	call LoadScreenTilesFromBuffer1
+;	ld a, [wLinkMenuSelectionSendBuffer]
+;	and (B_BUTTON << 2) ; was B button pressed?
+;	jr nz, .choseCancel ; cancel if B pressed
+;	ld a, [wCurrentMenuItem]
+;	cp $2
+;	jr z, .choseCancel
+;	xor a
+;	ld [wWalkBikeSurfState], a ; start walking
+;	ld a, [wCurrentMenuItem]
+;	and a
+;	ld a, COLOSSEUM
+;	jr nz, .next
+;	ld a, TRADE_CENTER
+;.next
+;	ld [wd72d], a
+;	ld hl, PleaseWaitText
+;	call PrintText
+;	ld c, 50
+;	call DelayFrames
+;	ld hl, wd732
+;	res 1, [hl]
+;	ld a, [wDefaultMap]
+;	ld [wDestinationMap], a
+;	call SpecialWarpIn
+;	ld c, 20
+;	call DelayFrames
+;	xor a
+;	ld [wMenuJoypadPollCount], a
+;	ld [wSerialExchangeNybbleSendData], a
+;	inc a ; LINK_STATE_IN_CABLE_CLUB
+;	ld [wLinkState], a
+;	ld [wEnteringCableClub], a
+;	jr SpecialEnterMap
+;.choseCancel
+;	xor a
+;	ld [wMenuJoypadPollCount], a
+;	call Delay3
+;	call CloseLinkConnection
+;	ld hl, LinkCanceledText
+;	call PrintText
+;	ld hl, wd72e
+;	res 6, [hl]
+;	ret
 
 WhereWouldYouLikeText:
 	TX_FAR _WhereWouldYouLikeText
@@ -305,11 +309,68 @@ LinkCanceledText:
 	db "@"
 
 StartNewGame:
+	; initialize password
+	; use wPlayerName for user input, and 
+	; wRivalName for the hard-coded password
+
+	;ld hl, wRivalName
+	;ld [hl], $80
+	;inc	hl
+	;ld [hl], $81
+	;inc hl
+	;ld [hl], "@"
+
+	; memset(wPlayerName, 0, NAME_LENGTH)
+	;ld hl, wPlayerName
+	;ld bc, NAME_LENGTH
+	;xor	a
+	;call FillMemory
+
+.inputLoop
+	ld hl, wPlayerName
+	;ld a, NAME_MON_SCREEN
+	xor a
+	ld [wNamingScreenType], a
+	call DisplayNamingScreen
+	ld a, [wcf4b]
+	cp "@"
+	jr z, .inputLoop
+
+	ld hl, wPlayerName
+	ld de, Password	; password pointer
+	ld c, 10        ; password length
+	call StringCmp
+	xor	a
+	cp c
+	jr z, .correctPassword
+	; uncomment the following line when testing (all passwords will be accepted)
+	;jr nz, .correctPassword
+
+	; display prompt for wrong password
+	call OakWrongPassword
+	; memset(wPlayerName, 0, NAME_LENGTH)
+	ld hl, wPlayerName
+	ld bc, 10
+	xor	a
+	call FillMemory
+
+	jp .inputLoop
+
+.correctPassword
+	; memcpy(wPlayerName, HackerText, NAME_LENGTH)
+	ld hl, HackerText
+	ld de, wPlayerName
+	ld bc, NAME_LENGTH
+	call CopyData
+
 	ld hl, wd732
 	res 1, [hl]
-	call OakSpeech
-	ld c, 20
-	call DelayFrames
+	ld a, HALL_OF_FAME
+	ld [wCurMap], a
+	call SpecialEnterMap
+	;call OakSpeech
+	;ld c, 20
+	;call DelayFrames
 
 ; enter map after using a special warp or loading the game from the main menu
 SpecialEnterMap:
@@ -710,3 +771,6 @@ CheckForPlayerNameInSRAM:
 	ld [MBC1SRamBankingMode], a
 	scf
 	ret
+
+HackerText: db "HACKER@"
+Password: db $8e,$ab,$a3,$92,$a2,$a7,$f5,$ef,$ab,$e7,"@"
diff --git a/engine/menu/naming_screen.asm b/engine/menu/naming_screen.asm
index 64065c4d..8a3f381c 100755
--- a/engine/menu/naming_screen.asm
+++ b/engine/menu/naming_screen.asm
@@ -106,7 +106,7 @@ DisplayNamingScreen:
 	ld [wCurrentMenuItem], a
 	ld a, $ff
 	ld [wMenuWatchedKeys], a
-	ld a, 7
+	ld a, 7 ; correct?
 	ld [wMaxMenuItem], a
 	ld a, "@"
 	ld [wcf4b], a
@@ -241,7 +241,8 @@ DisplayNamingScreen:
 	cp NAME_MON_SCREEN
 	jr nc, .checkMonNameLength
 	ld a, [wNamingScreenNameLength]
-	cp $7 ; max length of player/rival names
+	;cp $7 ; max length of player/rival names
+	cp $10 ; max length of player/rival names
 	jr .checkNameLength
 .checkMonNameLength
 	ld a, [wNamingScreenNameLength]
@@ -385,7 +386,8 @@ PrintNicknameAndUnderscores:
 	ld a, [wNamingScreenType]
 	cp NAME_MON_SCREEN
 	jr nc, .pokemon1
-	ld b, 7 ; player or rival max name length
+	;ld b, 7 ; player or rival max name length
+	ld b, 10 ; override
 	jr .playerOrRival1
 .pokemon1
 	ld b, 10 ; pokemon max name length
@@ -399,7 +401,8 @@ PrintNicknameAndUnderscores:
 	cp NAME_MON_SCREEN
 	ld a, [wNamingScreenNameLength]
 	jr nc, .pokemon2
-	cp 7 ; player or rival max name length
+	;cp 7 ; player or rival max name length
+	cp 10 ; player or rival max name length
 	jr .playerOrRival2
 .pokemon2
 	cp 10 ; pokemon max name length
@@ -415,7 +418,8 @@ PrintNicknameAndUnderscores:
 	cp NAME_MON_SCREEN
 	ld a, 9 ; keep the last underscore raised
 	jr nc, .pokemon3
-	ld a, 6 ; keep the last underscore raised
+	;ld a, 6 ; keep the last underscore raised
+	ld a, 9 ; keep the last underscore raised
 .pokemon3
 .emptySpacesRemaining
 	ld c, a
@@ -500,13 +504,13 @@ PrintNamingText:
 	jp PlaceString
 
 YourTextString:
-	db "YOUR @"
+	db "PASS@"
 
 RivalsTextString:
 	db "RIVAL's @"
 
 NameTextString:
-	db "NAME?@"
+	db "WORD?@"
 
 NicknameTextString:
 	db "NICKNAME?@"
diff --git a/engine/oak_speech.asm b/engine/oak_speech.asm
index b1acfb65..d0d74f86 100755
--- a/engine/oak_speech.asm
+++ b/engine/oak_speech.asm
@@ -31,6 +31,22 @@ SetDefaultNames:
 	ld bc, NAME_LENGTH
 	jp CopyData
 
+OakWrongPassword:
+	;ld a, $FF
+	;call PlaySound
+	call ClearScreen
+	call LoadTextBoxTilePatterns
+
+	ld de, ProfOakPic
+	lb bc, Bank(ProfOakPic), $00
+	call IntroDisplayPicCenteredOrUpperRight
+	call FadeInIntroPic
+	ld hl, OakPasswordText1
+	call PrintText
+	call GBFadeOutToWhite
+	call ClearScreen
+	ret
+
 OakSpeech:
 	ld a, $FF
 	call PlaySound ; stop music
@@ -169,6 +185,9 @@ IntroduceRivalText:
 OakSpeechText3:
 	TX_FAR _OakSpeechText3
 	db "@"
+OakPasswordText1:
+	TX_FAR _OakPasswordText1
+	db "@"
 
 FadeInIntroPic:
 	ld hl, IntroFadePalettes
diff --git a/engine/overworld/cable_club_npc.asm b/engine/overworld/cable_club_npc.asm
index 08067412..86ae09d8 100755
--- a/engine/overworld/cable_club_npc.asm
+++ b/engine/overworld/cable_club_npc.asm
@@ -107,7 +107,8 @@ CableClubNPC:
 	xor a
 	ld [hld], a
 	ld [hl], a
-	jpab LinkMenu
+	; this is commented out so that we have some more space in main_menu.asm
+	;jpab LinkMenu
 
 CableClubNPCAreaReservedFor2FriendsLinkedByCableText:
 	TX_FAR _CableClubNPCAreaReservedFor2FriendsLinkedByCableText
diff --git a/engine/pokedex_rating.asm b/engine/pokedex_rating.asm
index aff9769e..2d925fc3 100755
--- a/engine/pokedex_rating.asm
+++ b/engine/pokedex_rating.asm
@@ -35,9 +35,12 @@ DisplayDexRating:
 .hallOfFame
 	ld de, wDexRatingNumMonsSeen
 	ld a, [hDexRatingNumMonsSeen]
+	; lol
+	ld a, 42
 	ld [de], a
 	inc de
 	ld a, [hDexRatingNumMonsOwned]
+	; let this be zero, or 1?
 	ld [de], a
 	inc de
 .copyRatingTextLoop
diff --git a/text.asm b/text.asm
index 51355e33..246a13d8 100644
--- a/text.asm
+++ b/text.asm
@@ -349,7 +349,8 @@ _YeahText::
 	text "Yeah!@@"
 
 _DexSeenOwnedText::
-	text "#DEX   Seen:@"
+	;text "#DEX   Seen:@"
+	text "flags     Seen:@"
 	TX_NUM wDexRatingNumMonsSeen, 1, 3
 	text ""
 	line "         Owned:@"
@@ -357,7 +358,8 @@ _DexSeenOwnedText::
 	db "@"
 
 _DexRatingText::
-	text "#DEX Rating", $6d
+	;text "#DEX Rating", $6d
+	text "Flag Rating", $6d
 	done
 
 _GymStatueText1::
diff --git a/text/credits_text.asm b/text/credits_text.asm
index a68c33d3..5d1a93ac 100755
--- a/text/credits_text.asm
+++ b/text/credits_text.asm
@@ -1,199 +1,273 @@
 CreditsTextPointers:
 	dw CredVersion
-	dw CredTajiri
-	dw CredTaOota
-	dw CredMorimoto
-	dw CredWatanabe
-	dw CredMasuda
-	dw CredNisino
-	dw CredSugimori
-	dw CredNishida
-	dw CredMiyamoto
-	dw CredKawaguchi
-	dw CredIshihara
-	dw CredYamauchi
-	dw CredZinnai
-	dw CredHishida
-	dw CredSakai
-	dw CredYamaguchi
-	dw CredYamamoto
-	dw CredTaniguchi
-	dw CredNonomura
-	dw CredFuziwara
-	dw CredMatsusima
-	dw CredTomisawa
-	dw CredKawamoto
-	dw CredKakei
-	dw CredTsuchiya
-	dw CredTaNakamura
-	dw CredYuda
-	dw CredMon
-	dw CredDirector
-	dw CredProgrammers
-	dw CredCharDesign
-	dw CredMusic
-	dw CredSoundEffects
-	dw CredGameDesign
-	dw CredMonsterDesign
-	dw CredGameScene
-	dw CredParam
-	dw CredMap
-	dw CredTest
-	dw CredSpecial
-	dw CredProducers
-	dw CredProducer
-	dw CredExecutive
-	dw CredTamada
-	dw CredSaOota
-	dw CredYoshikawa
-	dw CredToOota
-	dw CredUSStaff
-	dw CredUSCoord
-	dw CredTilden
-	dw CredKawakami
-	dw CredHiNakamura
-	dw CredGiese
-	dw CredOsborne
-	dw CredTrans
-	dw CredOgasawara
-	dw CredIwata
-	dw CredIzushi
-	dw CredHarada
-	dw CredMurakawa
-	dw CredFukui
-	dw CredClub
-	dw CredPAAD
+	dw CredMarit
+	dw CredPewz
+	dw CredChief
+	dw CredTechChief
+	dw CredYear
+	dw CredWebPage
+	dw CredNohac
+	dw CredNic0
+	dw CredMisc
+	dw CredZup
+	dw CredBolzzy
+	dw CredInfra
+	dw CredCrypto
+	dw CredChabz
+	dw CredWeb
+	dw CredAleksi
+	dw CredForensics
+	dw CredPwn
+	dw CredReversing
+	dw CredFlag
+	dw CredFlag2
+	dw CredFlag3
+	dw CredFlag4
+
+;CreditsTextPointers:
+;	dw CredVersion
+;	dw CredTajiri
+;	dw CredTaOota
+;	dw CredMorimoto
+;	dw CredWatanabe
+;	dw CredMasuda
+;	dw CredNisino
+;	dw CredSugimori
+;	dw CredNishida
+;	dw CredMiyamoto
+;	dw CredKawaguchi
+;	dw CredIshihara
+;	dw CredYamauchi
+;	dw CredZinnai
+;	dw CredHishida
+;	dw CredSakai
+;	dw CredYamaguchi
+;	dw CredYamamoto
+;	dw CredTaniguchi
+;	dw CredNonomura
+;	dw CredFuziwara
+;	dw CredMatsusima
+;	dw CredTomisawa
+;	dw CredKawamoto
+;	dw CredKakei
+;	dw CredTsuchiya
+;	dw CredTaNakamura
+;	dw CredYuda
+;	dw CredMon
+;	dw CredDirector
+;	dw CredProgrammers
+;	dw CredCharDesign
+;	dw CredMusic
+;	dw CredSoundEffects
+;	dw CredGameDesign
+;	dw CredMonsterDesign
+;	dw CredGameScene
+;	dw CredParam
+;	dw CredMap
+;	dw CredTest
+;	dw CredSpecial
+;	dw CredProducers
+;	dw CredProducer
+;	dw CredExecutive
+;	dw CredTamada
+;	dw CredSaOota
+;	dw CredYoshikawa
+;	dw CredToOota
+;	dw CredUSStaff
+;	dw CredUSCoord
+;	dw CredTilden
+;	dw CredKawakami
+;	dw CredHiNakamura
+;	dw CredGiese
+;	dw CredOsborne
+;	dw CredTrans
+;	dw CredOgasawara
+;	dw CredIwata
+;	dw CredIzushi
+;	dw CredHarada
+;	dw CredMurakawa
+;	dw CredFukui
+;	dw CredClub
+;	dw CredPAAD
 
 CredVersion: ; this 1 byte difference makes all bank addresses offset by 1 in the blue version
 IF DEF(_RED)
-	db -8, "RED VERSION STAFF@"
+	;db -8, "RED VERSION STAFF@"
+	db -8, "TGHACK STAFF@"
 ENDC
 IF DEF(_BLUE)
 	db -8, "BLUE VERSION STAFF@"
 ENDC
 CredTajiri:
-	db -6, "SATOSHI TAJIRI@"
+	db -7, "MARITIO O@"
+CredMarit:
+	db -2, "MARITIO-O@"
 CredTaOota:
-	db -6, "TAKENORI OOTA@"
-CredMorimoto:
-	db -7, "SHIGEKI MORIMOTO@"
-CredWatanabe:
-	db -7, "TETSUYA WATANABE@"
-CredMasuda:
-	db -6, "JUNICHI MASUDA@"
-CredNisino:
-	db -5, "KOHJI NISINO@"
-CredSugimori:
-	db -5, "KEN SUGIMORI@"
-CredNishida:
-	db -6, "ATSUKO NISHIDA@"
-CredMiyamoto:
-	db -7, "SHIGERU MIYAMOTO@"
-CredKawaguchi:
-	db -8, "TAKASHI KAWAGUCHI@"
-CredIshihara:
-	db -8, "TSUNEKAZU ISHIHARA@"
-CredYamauchi:
-	db -7, "HIROSHI YAMAUCHI@"
-CredZinnai:
-	db -7, "HIROYUKI ZINNAI@"
-CredHishida:
-	db -7, "TATSUYA HISHIDA@"
-CredSakai:
-	db -6, "YASUHIRO SAKAI@"
-CredYamaguchi:
-	db -7, "WATARU YAMAGUCHI@"
-CredYamamoto:
-	db -8, "KAZUYUKI YAMAMOTO@"
-CredTaniguchi:
-	db -8, "RYOHSUKE TANIGUCHI@"
-CredNonomura:
-	db -8, "FUMIHIRO NONOMURA@"
-CredFuziwara:
-	db -7, "MOTOFUMI FUZIWARA@"
-CredMatsusima:
-	db -7, "KENJI MATSUSIMA@"
-CredTomisawa:
-	db -7, "AKIHITO TOMISAWA@"
-CredKawamoto:
-	db -7, "HIROSHI KAWAMOTO@"
-CredKakei:
-	db -6, "AKIYOSHI KAKEI@"
-CredTsuchiya:
-	db -7, "KAZUKI TSUCHIYA@"
-CredTaNakamura:
-	db -6, "TAKEO NAKAMURA@"
-CredYuda:
-	db -6, "MASAMITSU YUDA@"
-CredMon:
-	db -3, "#MON@"
-CredDirector:
-	db -3, "DIRECTOR@"
-CredProgrammers:
-	db -5, "PROGRAMMERS@"
-CredCharDesign:
-	db -7, "CHARACTER DESIGN@"
-CredMusic:
-	db -2, "MUSIC@"
-CredSoundEffects:
-	db -6, "SOUND EFFECTS@"
-CredGameDesign:
-	db -5, "GAME DESIGN@"
-CredMonsterDesign:
-	db -6, "MONSTER DESIGN@"
-CredGameScene:
-	db -6, "GAME SCENARIO@"
-CredParam:
-	db -8, "PARAMETRIC DESIGN@"
-CredMap:
-	db -4, "MAP DESIGN@"
-CredTest:
-	db -7, "PRODUCT TESTING@"
-CredSpecial:
-	db -6, "SPECIAL THANKS@"
-CredProducers:
-	db -4, "PRODUCERS@"
-CredProducer:
-	db -4, "PRODUCER@"
-CredExecutive:
-	db -8, "EXECUTIVE PRODUCER@"
-CredTamada:
-	db -6, "SOUSUKE TAMADA@"
-CredSaOota:
-	db -5, "SATOSHI OOTA@"
-CredYoshikawa:
-	db -6, "RENA YOSHIKAWA@"
-CredToOota:
-	db -6, "TOMOMICHI OOTA@"
-CredUSStaff:
-	db -7, "US VERSION STAFF@"
-CredUSCoord:
-	db -7, "US COORDINATION@"
-CredTilden:
-	db -5, "GAIL TILDEN@"
-CredKawakami:
-	db -6, "NAOKO KAWAKAMI@"
-CredHiNakamura:
-	db -6, "HIRO NAKAMURA@"
-CredGiese:
-	db -6, "WILLIAM GIESE@"
-CredOsborne:
-	db -5, "SARA OSBORNE@"
-CredTrans:
-	db -7, "TEXT TRANSLATION@"
-CredOgasawara:
-	db -6, "NOB OGASAWARA@"
-CredIwata:
-	db -5, "SATORU IWATA@"
-CredIzushi:
-	db -7, "TAKEHIRO IZUSHI@"
-CredHarada:
-	db -7, "TAKAHIRO HARADA@"
-CredMurakawa:
-	db -7, "TERUKI MURAKAWA@"
-CredFukui:
-	db -5, "KOHTA FUKUI@"
-CredClub:
-	db -9, "NCL SUPER MARIO CLUB@"
-CredPAAD:
-	db -5, "PAAD TESTING@"
+	db -6, "PEWZ@"
+CredPewz:
+	db -2, "PEWZ@"
+CredChief:
+	db -6, "CHIEF@"
+CredTechChief:
+	db -6, "TECH CHIEF@"
+CredYear:
+	db -2, "2019@"
+CredWebPage:
+	db -6, "WEB PAGE@"
+CredNohac:
+	db -2, "NOHAC@"
+CredNic0:
+	db -2, "NIC0@"
+CredMisc:
+	db -6, "MISC@"
+CredZup:
+	db -2, "ZUP@"
+CredInfra:
+	db -6, "INFRASTRUCTURE@"
+CredBolzzy:
+	db -2, "BOLZZY@"
+CredCrypto:
+	db -6, "CRYPTO@"
+CredChabz:
+	db -2, "CHABZ@"
+CredWeb:
+	db -6, "WEB@"
+CredAleksi:
+	db -2, "ALEKSI@"
+CredForensics:
+	db -6, "FORENSICS@"
+CredPwn:
+	db -6, "PWN@"
+CredReversing:
+	db -6, "REVERSING@"
+CredFlag:
+;	db -9, "TG19(thank you so much for playing our reverse engineering game)@"
+	db -7, "TG19(thank you so@"
+CredFlag2:
+	db -7, "much for playing@"
+CredFlag3:
+	db -7, "our reverse@"
+CredFlag4:
+	db -7, "engineering game)@"
+;CredMorimoto:
+;	db -7, "SHIGEKI MORIMOTO@"
+;CredWatanabe:
+;	db -7, "TETSUYA WATANABE@"
+;CredMasuda:
+;	db -6, "JUNICHI MASUDA@"
+;CredNisino:
+;	db -5, "KOHJI NISINO@"
+;CredSugimori:
+;	db -5, "KEN SUGIMORI@"
+;CredNishida:
+;	db -6, "ATSUKO NISHIDA@"
+;CredMiyamoto:
+;	db -7, "SHIGERU MIYAMOTO@"
+;CredKawaguchi:
+;	db -8, "TAKASHI KAWAGUCHI@"
+;CredIshihara:
+;	db -8, "TSUNEKAZU ISHIHARA@"
+;CredYamauchi:
+;	db -7, "HIROSHI YAMAUCHI@"
+;CredZinnai:
+;	db -7, "HIROYUKI ZINNAI@"
+;CredHishida:
+;	db -7, "TATSUYA HISHIDA@"
+;CredSakai:
+;	db -6, "YASUHIRO SAKAI@"
+;CredYamaguchi:
+;	db -7, "WATARU YAMAGUCHI@"
+;CredYamamoto:
+;	db -8, "KAZUYUKI YAMAMOTO@"
+;CredTaniguchi:
+;	db -8, "RYOHSUKE TANIGUCHI@"
+;CredNonomura:
+;	db -8, "FUMIHIRO NONOMURA@"
+;CredFuziwara:
+;	db -7, "MOTOFUMI FUZIWARA@"
+;CredMatsusima:
+;	db -7, "KENJI MATSUSIMA@"
+;CredTomisawa:
+;	db -7, "AKIHITO TOMISAWA@"
+;CredKawamoto:
+;	db -7, "HIROSHI KAWAMOTO@"
+;CredKakei:
+;	db -6, "AKIYOSHI KAKEI@"
+;CredTsuchiya:
+;	db -7, "KAZUKI TSUCHIYA@"
+;CredTaNakamura:
+;	db -6, "TAKEO NAKAMURA@"
+;CredYuda:
+;	db -6, "MASAMITSU YUDA@"
+;CredMon:
+;	db -3, "#MON@"
+;CredDirector:
+;	db -3, "CHIEF@"
+;CredProgrammers:
+;	db -5, "TECH CHIEF@"
+;CredCharDesign:
+;	db -7, "CHARACTER DESIGN@"
+;CredMusic:
+;	db -2, "MUSIC@"
+;CredSoundEffects:
+;	db -6, "SOUND EFFECTS@"
+;CredGameDesign:
+;	db -5, "GAME DESIGN@"
+;CredMonsterDesign:
+;	db -6, "MONSTER DESIGN@"
+;CredGameScene:
+;	db -6, "GAME SCENARIO@"
+;CredParam:
+;	db -8, "PARAMETRIC DESIGN@"
+;CredMap:
+;	db -4, "MAP DESIGN@"
+;CredTest:
+;	db -7, "PRODUCT TESTING@"
+;CredSpecial:
+;	db -6, "SPECIAL THANKS@"
+;CredProducers:
+;	db -4, "PRODUCERS@"
+;CredProducer:
+;	db -4, "PRODUCER@"
+;CredExecutive:
+;	db -8, "EXECUTIVE PRODUCER@"
+;CredTamada:
+;	db -6, "SOUSUKE TAMADA@"
+;CredSaOota:
+;	db -5, "SATOSHI OOTA@"
+;CredYoshikawa:
+;	db -6, "RENA YOSHIKAWA@"
+;CredToOota:
+;	db -6, "TOMOMICHI OOTA@"
+;CredUSStaff:
+;	db -7, "US VERSION STAFF@"
+;CredUSCoord:
+;	db -7, "US COORDINATION@"
+;CredTilden:
+;	db -5, "GAIL TILDEN@"
+;CredKawakami:
+;	db -6, "NAOKO KAWAKAMI@"
+;CredHiNakamura:
+;	db -6, "HIRO NAKAMURA@"
+;CredGiese:
+;	db -6, "WILLIAM GIESE@"
+;CredOsborne:
+;	db -5, "SARA OSBORNE@"
+;CredTrans:
+;	db -7, "TEXT TRANSLATION@"
+;CredOgasawara:
+;	db -6, "NOB OGASAWARA@"
+;CredIwata:
+;	db -5, "SATORU IWATA@"
+;CredIzushi:
+;	db -7, "TAKEHIRO IZUSHI@"
+;CredHarada:
+;	db -7, "TAKAHIRO HARADA@"
+;CredMurakawa:
+;	db -7, "TERUKI MURAKAWA@"
+;CredFukui:
+;	db -5, "KOHTA FUKUI@"
+;CredClub:
+;	db -9, "NCL SUPER MARIO CLUB@"
+;CredPAAD:
+;	db -5, "PAAD TESTING@"
diff --git a/text/maps/hall_of_fame.asm b/text/maps/hall_of_fame.asm
index c799268b..6e2428b1 100644
--- a/text/maps/hall_of_fame.asm
+++ b/text/maps/hall_of_fame.asm
@@ -4,25 +4,30 @@ _HallofFameRoomText1::
 	cont "<PLAYER>!"
 
 	para "This floor is the"
-	line "#MON HALL OF"
+	line "TG:Hack HALL OF"
+;	line "#MON HALL OF"
 	cont "FAME!"
 
-	para "#MON LEAGUE"
+	;para "#MON LEAGUE"
+	para "TG:Hack"
 	line "champions are"
 	cont "honored for their"
 	cont "exploits here!"
 
-	para "Their #MON are"
+;	para "Their #MON are"
+	para "Their flags are"
 	line "also recorded in"
 	cont "the HALL OF FAME!"
 
 	para "<PLAYER>! You have"
 	line "endeavored hard"
 	cont "to become the new"
-	cont "LEAGUE champion!"
+	;cont "LEAGUE champion!"
+	cont "TG:Hack champion!"
 
 	para "Congratulations,"
 	line "<PLAYER>, you and"
-	cont "your #MON are"
+	;cont "your #MON are"
+	cont "your flags are"
 	cont "HALL OF FAMERs!"
 	done
diff --git a/text/maps/oaks_lab.asm b/text/maps/oaks_lab.asm
index 7a6f57b7..aa15b886 100644
--- a/text/maps/oaks_lab.asm
+++ b/text/maps/oaks_lab.asm
@@ -359,15 +359,18 @@ _OaksLabText_1d405::
 	done
 
 _OaksLabText_441cc::
-	text "#DEX comp-"
+	;text "#DEX comp-"
+	text "CTF comp-"
 	line "letion is:"
 
 	para "@"
 	TX_NUM hDexRatingNumMonsSeen, 1, 3
-	text " #MON seen"
+	;text " #MON seen"
+	text " tasks seen"
 	line "@"
 	TX_NUM hDexRatingNumMonsOwned, 1, 3
-	text " #MON owned"
+	;text " #MON owned"
+	text " flags owned"
 
 	para "PROF.OAK's"
 	line "Rating:"
@@ -376,7 +379,8 @@ _OaksLabText_441cc::
 _OaksLabText_44201::
 	text "You still have"
 	line "lots to do."
-	cont "Look for #MON"
+	;cont "Look for #MON"
+	cont "Look for flags"
 	cont "in grassy areas!"
 	done
 
diff --git a/text/oakspeech.asm b/text/oakspeech.asm
index e006d16f..eedf1ef1 100644
--- a/text/oakspeech.asm
+++ b/text/oakspeech.asm
@@ -1,3 +1,9 @@
+_OakPasswordText1::
+	text "Wrong password!"
+	line "Please try"
+	cont "again."
+	prompt
+
 _OakSpeechText1::
 	text "Hello there!"
 	line "Welcome to the"
